<?php
namespace MediaRemoteBundle\Repository;

use MediaRemoteBundle\Entity\Remote;
use MediaRemoteBundle\Entity\Media;

/**
 * MediaRemoteRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MediaRemoteRepository extends \Doctrine\ORM\EntityRepository
{

    public function findByRemoteName(string $name): array
    {
        // $this->getEntityManager()
        // on recupère tout l'objet remote correspondant au nom recu en argument
        $remote = $this->getEntityManager()
            ->getRepository(Remote::class)// remplace $this->getDoctrine() dans un repo
            ->findOneByRemoteName($name);
        
        // liste des medias associé a ce remote
        return $this->findByRemote($remote); // pas besoin de préciser ->getRepository(MediaRemote::class)... car on est dans MediaRemot ici
    }
    
    
    public function findByMediaName(string $name): array
    {
        // $this->getEntityManager()
        // on recupère tout l'objet remote correspondant au nom recu en argument
        $media = $this->getEntityManager()
        ->getRepository(Media::class)// remplace $this->getDoctrine() dans un repo
        ->findOneByMediaName($name);
        
        // liste des medias associé a ce remote
        return $this->findByMedia($media); // pas besoin de préciser ->getRepository(MediaRemote::class)... car on est dans MediaRemot ici
    }

    public function findDefaultRemoteName(): string
    {
        
        // accéder a un remote par defaut (son nom ici)
        return $this->getEntityManager()
            -> // remplace $this->getDoctrine() dans un repo
getRepository(Remote::class)
            ->findOneBy([])
            ->getRemoteName();
    }

    public function findByRemoteDuration(int $duration): array
    {
        // $this->getEntityManager()
        dump($duration);
        // on recupère tout l'objet remote correspondant au nom recu en argument
        $remote = $this->getEntityManager()
            -> // remplace $this->getDoctrine() dans un repo
getRepository(Remote::class)
            ->findOneByRemoteDuration($duration);
        // liste des medias associé a ce remote
        return $this->findByRemote($remote); // pas besoin de préciser ->getRepository(MediaRemote::class)... car on est dans MediaRemot ici
    }

    public function findByRemoteNameAndMediaName(string $remote, string $media)
    {
        return $this->findOneBy([
            "remote" => $this->getEntityManager()
                ->getRepository(Remote::class)
                ->findOneByRemoteName($remote),
            "media" => $this->getEntityManager()
                ->getRepository(Media::class)
                ->findOneByMediaName($media)
        
        ]);
    }
}
